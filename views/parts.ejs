<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    
    <div class="container">
        <div class="components">
          
          <div class="switch">
            <div class="switch__1">
              <input id="switch-1" type="checkbox">
              <label for="switch-1"></label>
            </div>
            
            <div class="switch__2">
              <input id="switch-2" type="checkbox" checked>
              <label for="switch-2"></label>
            </div>
          </div>
          
          <div class="checkbox">
            <div class="checkbox__1">
              <input id="checkbox-1" type="checkbox">
              <label for="checkbox-1">
                <i class="material-icons">done</i></label>
            </div>
            <div class="checkbox__2">
              <input id="checkbox-2" type="checkbox" checked>
              <label for="checkbox-2">
                <i class="material-icons">done</i></label>
            </div>
          </div>
          
          <div class="radio">
            <div class="radio__1">
              <input id="radio-1" type="radio"  name="radio" value="1">
              <label for="radio-1"></label>
            </div>
            
            <div class="radio__2">
              <input id="radio-2" type="radio" name="radio" value="2" checked>
              <label for="radio-2"></label>
            </div>
          </div>
          
          <div class="btn btn__primary"><p>Button</p></div>
          <div class="btn btn__secondary"><p>Button</p></div>
          
          <div class="clock">
            <div class="hand hours"></div>
            <div class="hand minutes"></div>
            <div class="hand seconds"></div>
            <div class="point"></div>
            <div class="marker">
              <span class="marker__1"></span>
              <span class="marker__2"></span>
              <span class="marker__3"></span>
              <span class="marker__4"></span>
            </div>
          </div>
          
          <div class="chip">
            <div class="chip__icon">
              <ion-icon name="color-palette"></ion-icon></div>
            <p>Neumorphic Design</p>
            <div class="chip__close">
              <ion-icon name="close"></ion-icon>
            </div>
          </div>
          
          <div class="circle">
            <span class="circle__btn">
              <ion-icon class="pause" name="pause"></ion-icon>
              <ion-icon class="play" name="play"></ion-icon>
            </span>
            <span class="circle__back-1"></span>
            <span class="circle__back-2"></span>
          </div>
          
          <div class="form">
            <input type="text" class="form__input" placeholder="Type anything...">
          </div>
          
          <div class="search">
            <input type="text" class="search__input" placeholder="Search...">
            <div class="search__icon">
              <ion-icon name="search"></ion-icon>
            </div>
          </div>
          
          <div class="segmented-control">
            
            <input type="radio" name="radio2" value="3" id="tab-1" checked/>
            <label for="tab-1" class= "segmented-control__1">
              <p>Tab 1</p></label>
            
            <input type="radio" name="radio2" value="4" id="tab-2" />
            <label for="tab-2" class= "segmented-control__2">
              <p>Tab 2</p></label>
            
            <input type="radio" name="radio2" value="5" id="tab-3" />
            <label for="tab-3" class= "segmented-control__3">
              <p>Tab 3</p></label>
            
            <div class="segmented-control__color"></div>
          </div>
          
          <div class="icon">
            <div class="icon__home">
              <ion-icon name="home"></ion-icon></div>
            <div class="icon__account">
              <ion-icon name="person"></ion-icon></div>
            <div class="icon__settings">
              <ion-icon name="settings"></ion-icon></div>
          </div>
          
          <div class="slider">
            <div class="slider__box">
              <span class="slider__btn" id="find"></span>
              <span class="slider__color"></span>
              <span class="slider__tooltip">50%</span>
            </div>
          </div>
        </div>
        <a href="https://dribbble.com/myacode" class="dribbble" target="_blank"><ion-icon name="logo-dribbble"></ion-icon></a>
      </div>
</body>
<style>
    :root {
  --primary-light: #8abdff;
  --primary: #6d5dfc;
  --primary-dark: #5b0eeb;
  
  --white: #FFFFFF;
  --greyLight-1: #E4EBF5;
  --greyLight-2: #c8d0e7;
  --greyLight-3: #bec8e4;
  --greyDark: #9baacf;
}

*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
}

html {
  box-sizing: border-box;
  font-size: 62.5%;
  overflow-y: scroll;
  background: var(--greyLight-1);
}

@media screen and (min-width: 900px) {
  html {
    font-size: 75%;
  }
}

.container {
  min-height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
  font-family: 'Poppins', sans-serif;
  background: var(--greyLight-1);
}

.components {
  width: 75rem;
  height: 40rem;
  border-radius: 3rem;
  box-shadow: 0.8rem 0.8rem 1.4rem var(--greyLight-2), 
              -0.2rem -0.2rem 1.8rem var(--white);
  padding: 4rem;
  display: grid;
  grid-template-columns: 17.6rem 19rem 20.4rem;
  grid-template-rows: repeat(autofit, min-content);
  grid-column-gap: 5rem;
  grid-row-gap: 2.5rem;
  align-items: center;
}

/* SWITCH */
.switch {
  grid-column: 1 / 2;
  display: grid;
  grid-template-columns: repeat(2, min-content);
  grid-gap: 3rem;
  justify-self: center;
}

.switch input {
  display: none;
}

.switch__1,
.switch__2 {
  width: 6rem;
}

.switch label {
  display: flex;
  align-items: center;
  width: 100%;
  height: 3rem;
  box-shadow: 0.3rem 0.3rem 0.6rem var(--greyLight-2), 
              -0.2rem -0.2rem 0.5rem var(--white);
  background: rgba(255, 255, 255, 0);
  position: relative;
  cursor: pointer;
  border-radius: 1.6rem;
}

.switch label::after {
  content: "";
  position: absolute;
  left: 0.4rem;
  width: 2.1rem;
  height: 2.1rem;
  border-radius: 50%;
  background: var(--greyDark);
  transition: all 0.4s ease;
}

.switch label::before {
  content: '';
  width: 100%;
  height: 100%;
  border-radius: inherit;
  background: linear-gradient(330deg, var(--primary-dark) 0%, var(--primary) 50%, var(--primary-light) 100%);
  opacity: 0;
  transition: all 0.4s ease;
}

.switch input:checked ~ label::before {
  opacity: 1;
}

.switch input:checked ~ label::after {
  left: 57%;
  background: var(--greyLight-1);
}

/* CHECKBOX */
.checkbox {
  grid-column: 1 / 2;
  display: grid;
  grid-template-columns: repeat(2, 6rem);
  grid-gap: 3rem;
  justify-content: center;
}

.checkbox input {
  display: none;
}

.checkbox__1,
.checkbox__2 {
  width: 6rem;
}

.checkbox label {
  box-shadow: 0.3rem 0.3rem 0.6rem var(--greyLight-2);
  cursor: pointer;
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  border-radius: 0.5rem;
  width: 2.8rem;
  height: 2.8rem;
}

.checkbox label:hover i {
  color: var(--primary);
}

.checkbox i {
  font-size: 1.8rem;
  font-weight: 700;
  color: var(--greyDark);
  transition: 0.3s ease;
}

.checkbox input:checked ~ label {
  box-shadow: inset 0.2rem 0.2rem 0.5rem var(--greyLight-2), 
              inset -0.2rem -0.2rem 0.5rem var(--white);
}

.checkbox input:checked ~ label i {
  color: var(--primary);
}

/* RADIO */
.radio {
  grid-column: 1 / 2;
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  justify-items: center;
}

.radio input {
  display: none;
}

.radio__1,
.radio__2 {
  input:checked ~ label {
    box-shadow: inset 0.2rem 0.2rem 0.5rem var(--greyLight-2), 
                inset -0.2rem -0.2rem 0.5rem var(--white);
  }
}

.radio label {
  box-shadow: 0.3rem 0.3rem 0.6rem var(--greyLight-2);
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;
  width: 2.8rem;
  height: 2.8rem;
  border-radius: 50%;
}

.radio label:hover::after {
  background: var(--primary);
}

.radio label::after {
  content: "";
  position: absolute;
  width: 1.4rem;
  height: 1.4rem;
  background: var(--greyDark);
  border-radius: 50%;
  transition: 0.3s ease;
}

.radio__1:hover::after,
.radio__2:hover::after {
  background: var(--primary);
}

/* BUTTONS */
.btn {
  width: 15rem;
  height: 4rem;
  border-radius: 1rem;
  box-shadow: 0.3rem 0.3rem 0.6rem var(--greyLight-2);
  justify-self: center;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: 0.3s ease;
}

.btn__primary {
  grid-column: 1 / 2;
  grid-row: 4 / 5;
  background: var(--primary);
  box-shadow: inset 0.2rem 0.2rem 1rem var(--primary-light), 
              inset -0.2rem -0.2rem 1rem var(--primary-dark), 
              0.3rem 0.3rem 0.6rem var(--greyLight-2);
  color: var(--greyLight-1);
}

.btn__primary:hover {
  color: var(--white);
}

.btn__primary:active {
  box-shadow: inset 0.2rem 0.2rem 1rem var(--primary-dark), 
              inset -0.2rem -0.2rem 1rem var(--primary-light);
}

.btn__secondary {
  grid-column: 1 / 2;
  grid-row: 5 / 6;
  color: var(--greyDark);
}

.btn__secondary:hover {
  color: var(--primary);
}

.btn__secondary:active {
  box-shadow: inset 0.3rem 0.3rem 0.6rem var(--greyLight-2);
}

.btn p {
  font-size: 1.6rem;
}

/* CLOCK */
.clock {
  grid-column: 2 / 3;
  grid-row: 1 / 3;
  width: 12rem;
  height: 12rem;
  justify-self: center;
  box-shadow: 0.3rem 0.3rem 0.6rem var(--greyLight-2);
  border-radius: 50%;
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
}

.clock .hand {
  position: absolute;
  transform-origin: bottom;
  bottom: 6rem;
  border-radius: 0.2rem;
  z-index: 200;
}

.clock .hours {
  width: 0.4rem;
  height: 3.2rem;
  background: var(--greyLight-3);
}

.clock .minutes {
  width: 0.4rem;
  height: 4.6rem;
  background: var(--greyDark);
}

.clock .seconds {
  width: 0.2rem;
  height: 5.2rem;
  background: var(--primary);
}

.clock .point {
  position: absolute;
  width: 0.8rem;
  height: 0.8rem;
  border-radius: 50%;
  background: var(--primary);
  z-index: 300;
}

.clock .marker {
  width: 95%;
  height: 95%;
  border-radius: 50%;
  position: relative;
  box-shadow: inset 1px 1px 1px var(--greyLight-2), 
              inset -1px -1px 1px var(--white);
}

.clock .marker::after {
  content: '';
  width: 60%;
  height: 60%;
  position: absolute;
  box-shadow: inset 1px 1px 1px var(--greyLight-2), 
              inset -1px -1px 1px var(--white);
  border-radius: 50%;
  top: 20%;
  left: 20%;
  filter: blur(1px);
}

.clock__1,
.clock__2,
.clock__3,
.clock__4 {
  position: absolute;
  border-radius: 0.1rem;
  box-shadow: inset 1px 1px 1px var(--greyLight-2), 
              inset -1px -1px 1px var(--white);
}

.clock__1,
.clock__2 {
  width: 0.2rem;
  height: 0.6rem;
}

.clock__3,
.clock__4 {
  width: 0.6rem;
  height: 0.2rem;
  top: 5.6rem;
}

.clock__1 {
  top: 2%;
}

.clock__2 {
  top: 98%;
  transform: translateY(-0.6rem);
}

.clock__3 {
  left: 2%;
}

.clock__4 {
  left: 98%;
  transform: translateX(-0.6rem);
}

/* CHIP */
.chip {
  grid-column: 2 / 3;
  grid-row: 3 / 4;
  justify-self: center;
  width: 17rem;
  height: 4rem;
  border-radius: 1rem;
  box-shadow: 0.3rem 0.3rem 0.6rem var(--greyLight-2);
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.chip__icon {
  width: 3rem;
  height: 3rem;
  border-radius: 1rem;
  margin: 0 0 0 0.2rem;
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 1.8rem;
  color: var(--primary);
}

.chip p {
  font-size: 0.9rem;
  margin-left: -1.8rem;
  color: var(--greyDark);
}

.chip__close {
  width: 1.6rem;
  height: 1.6rem;
  margin: 0 0.5rem;
  display: flex;
  font-size: 1.6rem;
  color: var(--greyLight-3);
  cursor: pointer;
}

/* PLAY BUTTON */
.circle {
  grid-column: 2 / 3;
  grid-row: 4 / 6;
  width: 9rem;
  height: 100%;
  justify-self: center;
  border-radius: 1rem;
  display: grid;
  grid-template-rows: 1fr;
  justify-items: center;
  align-items: center;
}

.circle__btn {
  grid-row: 1 / 2;
  grid-column: 1 / 2;
  width: 6rem;
  height: 6rem;
  display: flex;
  margin: 0.6rem;
  justify-content: center;
  align-items: center;
  border-radius: 50%;
  font-size: 3.2rem;
  color: var(--primary);
  z-index: 300;
  background: var(--greyLight-1);
  box-shadow: 0.3rem 0.3rem 0.6rem var(--greyLight-2);
  cursor: pointer;
  position: relative;
}

.circle__btn.shadow {
  box-shadow: 0.2rem 0.2rem 0.5rem var(--greyLight-2), 
              -0.2rem -0.2rem 0.5rem var(--white);
}

.circle__btn .play {
  position: absolute;
  opacity: 0;
  transition: all 0.2s linear;
}

.circle__btn.play.visibility {
  opacity: 1;
}

.circle__btn .pause {
  position: absolute;
  transition: all 0.2s linear;
}

.circle__btn.pause.visibility {
  opacity: 0;
}

.circle__back-1,
.circle__back-2 {
  grid-row: 1 / 2;
  grid-column: 1 / 2;
  width: 6rem;
  height: 6rem;
  border-radius: 50%;
  filter: blur(1px);
  z-index: 100;
}

.circle__back-1 {
  box-shadow: 0.4rem 0.4rem 0.8rem var(--greyLight-2), 
              -0.2rem -0.2rem 0.5rem var(--white);
}

.circle__back-2 {
  box-shadow: 0.2rem 0.2rem 0.5rem var(--greyLight-2), 
              -0.2rem -0.2rem 0.5rem var(--white);
}

/* VOLUME */
.volume {
  grid-column: 3 / 4;
  grid-row: 4 / 6;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
}

.volume__slider {
  position: relative;
  width: 2rem;
  height: 15rem;
  margin: 0.4rem 0;
}

.volume__slider input {
  position: absolute;
  bottom: 0;
  left: 50%;
  transform: translateX(-50%);
  width: 4rem;
  height: 1rem;
  opacity: 0;
  cursor: pointer;
  z-index: 300;
}

.volume__slider label {
  position: absolute;
  bottom: 0;
  left: 50%;
  transform: translateX(-50%);
  width: 2rem;
  height: 2rem;
  background: var(--greyLight-3);
  border-radius: 50%;
  box-shadow: 0.2rem 0.2rem 0.5rem var(--greyLight-2), 
              -0.2rem -0.2rem 0.5rem var(--white);
  cursor: pointer;
  z-index: 200;
  display: flex;
  justify-content: center;
  align-items: center;
}

.volume__icon {
  font-size: 1.6rem;
  color: var(--greyDark);
  cursor: pointer;
}

/* NOTIFICATION */
.notification {
  position: fixed;
  top: 2rem;
  right: 2rem;
  width: 30rem;
  height: 10rem;
  background: var(--white);
  box-shadow: 0.6rem 0.6rem 1.2rem var(--greyLight-2);
  border-radius: 1rem;
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 1.5rem;
  visibility: hidden;
  opacity: 0;
  transition: all 0.3s ease;
}

.notification.active {
  visibility: visible;
  opacity: 1;
}

.notification .message {
  font-size: 1.6rem;
  color: var(--greyDark);
}

.notification .close {
  font-size: 1.6rem;
  color: var(--greyDark);
  cursor: pointer;
}

/* PROGRESS BAR */
.progress {
  grid-column: 2 / 3;
  grid-row: 6 / 7;
  width: 100%;
  height: 0.4rem;
  background: var(--greyLight-3);
  border-radius: 0.2rem;
  position: relative;
}

.progress__bar {
  position: absolute;
  height: 100%;
  border-radius: inherit;
  background: linear-gradient(330deg, var(--primary-dark) 0%, var(--primary) 50%, var(--primary-light) 100%);
  width: 50%;
  transition: all 0.3s ease;
}

/* TOOLTIP */
.tooltip {
  position: relative;
  display: inline-block;
}

.tooltip .tooltip__text {
  visibility: hidden;
  opacity: 0;
  width: 12rem;
  background: var(--greyDark);
  color: var(--white);
  text-align: center;
  border-radius: 0.5rem;
  padding: 0.5rem;
  position: absolute;
  z-index: 100;
  bottom: 150%;
  left: 50%;
  transform: translateX(-50%);
  transition: all 0.3s ease;
}

.tooltip .tooltip__arrow {
  position: absolute;
  width: 0;
  height: 0;
  border-left: 0.7rem solid transparent;
  border-right: 0.7rem solid transparent;
  border-bottom: 0.7rem solid var(--greyDark);
  bottom: -0.5rem;
  left: 50%;
  transform: translateX(-50%);
}

.tooltip:hover .tooltip__text {
  visibility: visible;
  opacity: 1;
}

/* SPINNER */
.spinner {
  display: inline-block;
  width: 3rem;
  height: 3rem;
  border-radius: 50%;
  border: 0.5rem solid var(--greyLight-3);
  border-top: 0.5rem solid var(--primary);
  animation: spin 1s linear infinite;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

</style>
<script>
    /*  clock */
const hours = document.querySelector('.hours');
const minutes = document.querySelector('.minutes');
const seconds = document.querySelector('.seconds');

/*  play button */
const play = document.querySelector('.play');
const pause = document.querySelector('.pause');
const playBtn = document.querySelector('.circle__btn');
const wave1 = document.querySelector('.circle__back-1');
const wave2 = document.querySelector('.circle__back-2');

/*  rate slider */
const container = document.querySelector('.slider__box');
const btn = document.querySelector('.slider__btn');
const color = document.querySelector('.slider__color');
const tooltip = document.querySelector('.slider__tooltip');

clock = () => {
  let today = new Date();
  let h = (today.getHours() % 12) + today.getMinutes() / 59; // 22 % 12 = 10pm
  let m = today.getMinutes(); // 0 - 59
  let s = today.getSeconds(); // 0 - 59

  h *= 30; // 12 * 30 = 360deg
  m *= 6;
  s *= 6; // 60 * 6 = 360deg

  rotation(hours, h);
  rotation(minutes, m);
  rotation(seconds, s);

  // call every second
  setTimeout(clock, 500);
}

rotation = (target, val) => {
  target.style.transform =  `rotate(${val}deg)`;
}

window.onload = clock();

dragElement = (target, btn) => {
  target.addEventListener('mousedown', (e) => {
      onMouseMove(e);
      window.addEventListener('mousemove', onMouseMove);
      window.addEventListener('mouseup', onMouseUp);
  });

  onMouseMove = (e) => {
      e.preventDefault();
      let targetRect = target.getBoundingClientRect();
      let x = e.pageX - targetRect.left + 10;
      if (x > targetRect.width) { x = targetRect.width};
      if (x < 0){ x = 0};
      btn.x = x - 10;
      btn.style.left = btn.x + 'px';

      // get the position of the button inside the container (%)
      let percentPosition = (btn.x + 10) / targetRect.width * 100;
      
      // color width = position of button (%)
      color.style.width = percentPosition + "%";

      // move the tooltip when button moves, and show the tooltip
      tooltip.style.left = btn.x - 5 + 'px';
      tooltip.style.opacity = 1;

      // show the percentage in the tooltip
      tooltip.textContent = Math.round(percentPosition) + '%';
  };

  onMouseUp  = (e) => {
      window.removeEventListener('mousemove', onMouseMove);
      tooltip.style.opacity = 0;

      btn.addEventListener('mouseover', function() {
        tooltip.style.opacity = 1;
      });
      
      btn.addEventListener('mouseout', function() {
        tooltip.style.opacity = 0;
      });
  };
};

dragElement(container, btn);

/*  play button  */
playBtn.addEventListener('click', function(e) {
  e.preventDefault();
  pause.classList.toggle('visibility');
  play.classList.toggle('visibility');
  playBtn.classList.toggle('shadow');
  wave1.classList.toggle('paused');
  wave2.classList.toggle('paused');
});
</script>
</html>